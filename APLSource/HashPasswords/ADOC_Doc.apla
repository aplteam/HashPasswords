(
 '# HashPasswords'
 ''
 '## Overview'
 ''
 'This package gives you the tools you need to generate the hash for a salted password.'
 ''
 'Note that there are several reasons for salting a password:'
 ''
 '* Ensure that passwords that are too short to be secure by normal standards are secure anyway.'
 '* Prevent an attacker from realising that users are using the same password.'
 ''
 'By salting a password with a randomly generated salt, we increase security.'
 ''
 'Note that the salt must be stored as clear text. And no, this is not a security risk!'
 ''
 'For more information see <https://en.m.wikipedia.org/wiki/Salt_(cryptography)>'
 ''
 '## Conga DLLs'
 ''
 'On Windows, .NET is used for solving the task.'
 ''
 'On other platforms `HashPasswords` needs the Conga DLL `libconga∘∘ssl64`. `∘∘` stands for the '
 'version number. If the global variable `HashPasswords.PathToCongaDLLs` is empty (that''s the default) '
 'then `HashPasswords` tries to use the Conga DLL the currently running APL is coming with.'
 ''
 'If that is not suitable then make sure that `PathToCongaDLLs` point to a folder where suitable DLLs '
 'can be found.'
 ''
 '## Examples'
 ''
 '```'
 '      salt1←HashPasswords.CreateSalt 10'
 '      hash1←HashPasswords.Hash salt1,''123456'''
 '      salt2←HashPasswords.CreateSalt 10'
 '      ⎕←hash2←HashPasswords.Hash salt2,''123456'''
 '      hash1≢hash2'
 ('1'⋄)
 '      hash1≡HashPasswords.Hash salt1,''123456'''
 ('1'⋄)
 '      hash2≡HashPasswords.Hash salt2,''123456'''
 ('1'⋄)
 '```'
)
